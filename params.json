{"name":"Phormium","tagline":"Phormium is a minimal ORM for PHP (which incidentally works with Informix)","body":"Phormium\r\n========\r\n\r\nPhormium is a minimalist ORM for PHP.\r\n\r\nTested on Informix, MySQL, PosgreSQL and SQLite. Might work on other databases\r\nwith a PDO driver or may require some work.\r\n\r\nWarning: This is a work in progress. Test before using! Report any bugs\r\n[here](https://github.com/ihabunek/phormium/issues).\r\n\r\n[![Build Status](https://travis-ci.org/ihabunek/phormium.png)](https://travis-ci.org/ihabunek/phormium)\r\n\r\nFeatures\r\n--------\r\n\r\n* CRUD operations made simple\r\n* batch update and delete\r\n* filtering\r\n* ordering\r\n* limiting\r\n* transactions\r\n* query logging (requires [Apache log4php](http://logging.apache.org/log4php/))\r\n\r\nNot yet implemented:\r\n\r\n* relationships between models (joins)\r\n\r\nDocumentation\r\n-------------\r\n\r\n[The documentation](http://phormium.readthedocs.org/en/latest/) is hosted by\r\nReadTheDocs.org.\r\n\r\nExample\r\n-------\r\n\r\nAfter initial setup, Phormium is very easy to use. Here's a quick overview of\r\nit's features:\r\n\r\n```php\r\n// Create a new person record\r\n$person = new Person();\r\n$person->name = \"Frank Zappa\";\r\n$person->birthday = \"1940-12-20\";\r\n$person->save();\r\n\r\n// Fetch, update, save\r\n$person = Person::get(10);\r\n$person->salary += 5000; // give the man a raise!\r\n$person->save();\r\n\r\n// Or delete\r\nPerson::get(37)->delete();\r\n\r\n// Intuitive filtering, ordering and limiting\r\n$persons = Person::objects()\r\n    ->filter('salary', '>', 10000)\r\n    ->filter('birthday', 'between', ['2000-01-01', '2001-01-01'])\r\n    ->orderBy('name', 'desc')\r\n    ->limit(100)\r\n    ->fetch();\r\n\r\n// Count records\r\n$count = Person::objects()\r\n    ->filter('salary', '>', 10000)\r\n    ->count();\r\n\r\n// Distinct values\r\n$count = Person::objects()\r\n    ->distinct('name', 'email');\r\n\r\n// Complex composite filters\r\n$persons = Person::objects()->filter(\r\n    Filter::_or(\r\n        Filter::_and(\r\n            array('id', '>=', 10),\r\n            array('id', '<=', 20)\r\n        ),\r\n        Filter::_and(\r\n            array('id', '>=', 50),\r\n            array('id', '<=', 60)\r\n        ),\r\n        array('id', '>=', 100),\r\n    )\r\n)->fetch();\r\n\r\n// Fetch a single record (otherwise throws an exeption)\r\n$person = Person::objects()\r\n    ->filter('email', '=', 'ivan@example.com')\r\n    ->single();\r\n\r\n// Batch update\r\nPerson::objects()\r\n    ->filter('salary', '>', 10000)\r\n    ->update(['salary' => 5000]);\r\n\r\n// Batch delete\r\nPerson::objects()\r\n    ->filter('salary', '>', 10000)\r\n    ->delete();\r\n\r\n// Aggregates\r\nPerson::objects()->filter('name', 'like', 'Ivan%')->avg('salary');\r\nPerson::objects()->filter('name', 'like', 'Marko%')->min('birthday');\r\n```\r\n\r\nSee [documentation](http://phormium.readthedocs.org/en/latest/) for full\r\nreference, also check out the `example` directory for more examples.\r\n\r\nWhy?\r\n----\r\n\r\n\"Why another ORM?!?\", I hear you cry.\r\n\r\nThere are two reasons:\r\n\r\n* I work a lot on Informix on my day job and no other ORM I found supports it.\r\n* Writing an ORM is a great experience. You should try it.\r\n\r\nPhormium is greatly inspired by other ORMs, in particular\r\n[Django ORM](https://docs.djangoproject.com/en/dev/topics/db/) and\r\nLaravel's [Eloquent ORM](http://laravel.com/docs/database/eloquent).\r\n\r\nLet me know what you think!\r\n\r\nIvan Habunek [@ihabunek](http://twitter.com/ihabunek)\r\n\r\nPraise\r\n------\r\n\r\nIf you like it, buy me a beer (in Croatia, that's around â‚¬2 or $3).\r\n\r\n[![Flattr this](http://api.flattr.com/button/flattr-badge-large.png)](http://flattr.com/thing/1204532/ihabunekphormium-on-GitHub)\r\n\r\nLicense\r\n-------\r\nLicensed under the MIT license. `See LICENSE.md`.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}